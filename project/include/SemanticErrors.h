#pragma once

#define VARIABLE_REDEFINITION "identifier used for variable is already taken"
#define FUNCTION_REDEFINITION "identifier used for function is already taken"
#define ENUM_REDEFINITION "identifier used for an enum name is already taken"
#define ENUM_ITEM_REDEFINITION "identifier used for an enum item is already taken"
#define REPEATED_ENUM_VALUE "reuse of the same value for multiple enum items is not allowed"
#define REPEATED_CONJURED_ENUM_VALUE "reoccurence of a value for multiple enum items is not allowed"
#define MISSING_MAIN "no entry point function 'main' is defined"
#define BAD_MAIN_RETURN_TYPE "function main must have 'int' return type"
#define STATIC_GLOBAL_VARIABLE "static global variables are not allowed"
#define GLOBAL_VARIABLE_DEFINITION_EXPRESSION "global varible must be initialised by literal"
#define MISPLACED_INT_LITERAL "cannot assign int literal"
#define MISPLACED_FLOAT_LITERAL "cannot assign float literal"
#define MISPLACED_BOOL_LITERAL "cannot assign bool literal"
#define MISPLACED_STRING_LITERAL "cannot assign string literal"
#define MISPLACED_STRING_VARIABLE "cannot assign literal other than type string"
#define CONSTANT_DECLARATION "constant assignment missing value"
#define REDEFINITION_OF_PARAMETER "identifier used for function parameter is already taken"

#define VARIABLE_SAME_AS_PARAMETER "variable name in functions top scope must not be the same as a its parameter"
#define LOCAL_VARIABLE_REDEFINITION "identifier used for variable is already taken in its scope"
#define FOR_HEADER_DEFINITION_WITH_SPECIFIER "definition in for header must not have a storage specifier"
#define BREAK_OUT_OF_LOOP "a break statement must be used within a loop"
#define CONTINUE_OUT_OF_LOOP "a continue statement must be used within a loop"
#define REDO_OUT_OF_LOOP "a redo statement must be used within a loop"
#define RESTART_OUT_OF_LOOP "a restart statement must be used within a loop"
#define UNDEFINED_VARIABLE "variable is undefined"
#define IMPLICIT_STRING_CONVERSION "cannot perform implicit conversion on subexpression of type string"
#define MODULE_ON_FLOAT "operator \"\%\" operands must not have type float"
#define BIT_FLOAT_OPERAND "bitwise operator operands must not have type float"
#define BIT_STRING_OPERAND "bitwise operator operands must not have type string"
#define READ_NOT_STRING "read must be used with a variable of type string"
#define READ_INTO_CONSTANT "cannot read into a constant variable"
