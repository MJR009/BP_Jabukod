/*
    Martin Jabůrek
    Jabukód code example

    ackerman.jk
    Implementation of the Ackermann function
*/

const int M = 4;
const int N = 1;

int main() {
    int result = ackermann(M, N);
    writeInt(result);
    write "\n";
}

int ackermann(int m, int n) {
    if (m == 0) {
        return n + 1;
    } else if ((m > 0) && (n == 0)) {
        return ackermann(m - 1, 1);
    } else {
        return ackermann(m - 1, ackermann(m, n - 1));
    }
}



void writeInt(int n) {
    if (n < 0) {
        write "-";
        n = -n;
    }

    int digit = n % 10;
    n = (n - digit) / 10;
    if (n > 0) {
        writeInt(n);
    }

    string output;

    if (digit == 0) output = "0";
    if (digit == 1) output = "1";
    if (digit == 2) output = "2";
    if (digit == 3) output = "3";
    if (digit == 4) output = "4";
    if (digit == 5) output = "5";
    if (digit == 6) output = "6";
    if (digit == 7) output = "7";
    if (digit == 8) output = "8";
    if (digit == 9) output = "9";

    write output;
}
