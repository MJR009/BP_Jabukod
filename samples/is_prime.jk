/*
    Martin Jabůrek
    Jabukód code example

    is_prime.jk
    Prints first "COUNT" whole numbers and whether they are prime or composite
*/

const int COUNT = 1000;

int main() {
    for (int i = 0; i < COUNT; i = i + 1) {
        if (i < 2) {
            notPrime(i);
            continue;
        }

        bool isPrime = true;

        for (int j = 2; j < i; j = j + 1) {
            if (i % j == 0) {
                isPrime = false;
                break;
            }
        }

        if (isPrime) prime(i); else composite(i);
    }
}

void notPrime(int n) {
    writeInt(n);
    write " - not prime\n";
}

void prime(int n) {
    writeInt(n);
    write " - prime\n";
}

void composite(int n) {
    writeInt(n);
    write " - composite\n";
}



void writeInt(int n) {
    if (n < 0) {
        write "-";
        n = -n;
    }

    int digit = n % 10;
    n = (n - digit) / 10;
    if (n > 0) {
        writeInt(n);
    }

    string output;

    if (digit == 0) output = "0";
    if (digit == 1) output = "1";
    if (digit == 2) output = "2";
    if (digit == 3) output = "3";
    if (digit == 4) output = "4";
    if (digit == 5) output = "5";
    if (digit == 6) output = "6";
    if (digit == 7) output = "7";
    if (digit == 8) output = "8";
    if (digit == 9) output = "9";

    write output;
}
