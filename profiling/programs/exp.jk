/*
    Martin Jab≈Ørek
    Profiling program exp.jk

    exponent calculation using Taylor series, floating point, 20 iterations
*/

int main() {
    for (float i = 0; i < 5; i=i+0.25) {
        writeFloat( i );
        write "\t";
        writeFloat( exp(i) );
        write "\n";
    }
}

float exp(float x) {
    float res = 1; // iteration 1

    float numerator = x;
    int denominator = 1;

    for (int i = 2; i <= 20; i=i+1) {
        res = res + (numerator / denominator);

        numerator = numerator * x;
        denominator = denominator * i;
    }

    return res;
}




void writeFloat(float x) {
    if (x < 0) {
        write "-";
        x = -x;
    }

    int whole = x;
    float decimalPart = x - whole;

    writeInt(whole);
    write ".";
    writeDecimal(decimalPart);
}

void writeInt(int n) {
    if (n < 0) {
        write "-";
        n = -n;
    }

    int digit = n % 10;
    n = (n - digit) / 10;
    if (n > 0) {
        writeInt(n);
    }

    string output;

    if (digit == 0) output = "0";
    if (digit == 1) output = "1";
    if (digit == 2) output = "2";
    if (digit == 3) output = "3";
    if (digit == 4) output = "4";
    if (digit == 5) output = "5";
    if (digit == 6) output = "6";
    if (digit == 7) output = "7";
    if (digit == 8) output = "8";
    if (digit == 9) output = "9";

    write output;
}

void writeDecimal(float x) {
    int digit;

    for (int i = 0; i < 6; i = i + 1) {
        digit = 10*x;
        writeInt(digit);
        x = 10*x - digit;
    }
}
